[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "docplex-extensions"
description = "Custom data structures and user-friendly functions for modeling with DOcplex"
readme = "README.md"
license = { file = "LICENSE" }
authors = [{ name = "Samarth Mistry", email = "samarth.mistry@gmail.com" }]
dynamic = ["version"]
requires-python = ">=3.10"
classifiers = [
    "License :: OSI Approved :: Apache Software License",
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Typing :: Typed",
]
dependencies = ["typing_extensions>=4.10.0", "docplex>=2.25.236"]

[project.optional-dependencies]
cplex-runtime = ["cplex>=20.1.0.4"]
tests = [
    "pytest>=8.1.1",
    "coverage>=7.4.4",
    "pytest-cov>=4.1.0",
    "pytest-randomly>=3.15.0",
    "mypy[faster-cache]>=1.13.0",
    "pandas>=1.5.0",              # for pandas accessor
    "pandas-stubs>=1.5.0",        # for pandas accessor
]
docs = [
    "Sphinx==8.0.2",
    "sphinx-autosummary-accessors==2023.4.0",
    "numpydoc==1.8.0",
    "ansys-sphinx-theme==1.0.3",
    "sphinx_design==0.6.1",
    "sphinx_gallery==0.17.1",
    "matplotlib==3.9.2",                      # for sphinx_gallery to run py fies
    "numpy<2.0",                              # for compatibility with matplotlib
    "pandas>=1.5.0",                          # for pandas accessor
    "pandas-stubs>=1.5.0",                    # for pandas accessor
]
dev = [
    "ruff>=0.7.0",
    "pre-commit>=3.8.0",
    "tox>=4.14.1",
    "docplex-extensions[tests]",
    "docplex-extensions[docs]",
]

[project.urls]
Documentation = "https://docplex-extensions.readthedocs.io/en/stable"
"Source code" = "https://github.com/samarthmistry/docplex-extensions"
Changelog = "https://github.com/samarthmistry/docplex-extensions/releases"

[tool.setuptools.dynamic]
version = { attr = "docplex_extensions.__version__" }

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
docplex_extensions = ["py.typed"]

###### ruff ######

[tool.ruff]
line-length = 100
target-version = "py310"

[tool.ruff.lint]
select = ["F", "E", "W", "I", "D", "B", "UP", "FA"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F403", "D212"]
"setup.py" = ["D"]
"{docs,tests,examples}/**" = ["D"]
"examples/*" = ["E402"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.format]
quote-style = "single"
docstring-code-format = true

###### numpydoc ######

[tool.numpydoc_validation]
checks = [
    "all",  # All checks except those below:
    "GL01", # Summary should start in the line immediately
    "ES01", # Extended summary not found
    "SA01", # 'See Also' section not found
    "EX01", # 'Examples' section not found
    "PR07", # Parameter has no description
    "RT03", # Return value has no description
]
exclude = [
    "\\.__",             # Dunder methods
    "._create",          # Dunder method impl
    "._setitem_idx",     # Dunder method impl
    "._setitem_slice",   # Dunder method impl
    "._get_repr_header", # repr
    "._repr_pretty_",    # repr
    "SupportsGetItem",   # Protocol
    "_RAISE_KEYERROR",   # Dummy
    ".name",             # property
    ".names",            # property
    ".key_name",         # property
    ".key_names",        # property
    ".value_name",       # property
]
override_PR01 = [
    "^Not supported by ", # _param_dicts.ParamDictBase.update, .fromkeys
    #                     # _var_dicts.VarDictBase.pop, setdefault, .update, .fromkeys
    "^Solve a DOcplex model ", # _model_funcs.solve
]
override_PR02 = [
    "^Not supported by ", # _param_dicts.ParamDictBase.update, .fromkeys
    #                     # _var_dicts.VarDictBase.pop, setdefault, .update, .fromkeys
    "^Solve a DOcplex model ", # _model_funcs.solve
]
override_SS05 = [
    "^Preprocess ", # _var_funcs._preprocess_bound
]

###### mypy ######

[tool.mypy]
python_version = "3.10"
strict = true
follow_imports = "normal"
show_error_codes = true
show_error_context = true
pretty = true

[[tool.mypy.overrides]]
module = ["docplex.mp.*"]
ignore_missing_imports = true

###### pytest ######

[tool.pytest.ini_options]
addopts = """
    --doctest-modules
    --doctest-continue-on-failure
    --cov=docplex_extensions
    --cov-report term-missing
    --randomly-seed=42
"""
doctest_optionflags = "NORMALIZE_WHITESPACE IGNORE_EXCEPTION_DETAIL"
testpaths = [
    "tests", # unit tests; functional tests; doctests in helper code
    "src",   # doctests in source code
]

###### Coverage.py ######

[tool.coverage.report]
exclude_also = [
    "find_spec",            # untestable
    "def _get_repr_header", # repr
    "def __repr__",         # repr
    "def _repr_pretty_",    # repr
    "if TYPE_CHECKING",     # typing
    "@overload",            # typing
    "except ImportError",   # optional dependency
]

###### tox ######

[tool.tox]
legacy_tox_ini = """
    [tox]
    min_version = 4.0
    env_list = py{310,311,312,313}, mypy, cpx{2010,2210,2211}, pd{15,20,X}

    [gh]
    python =
        3.10 = py310, mypy, cpx2010, cpx2210, cpx2211, pd15, pd20, pdX
        3.11 = py311
        3.12 = py312
        3.13 = py313

    [testenv]
    description = Run doctests, unit tests, functional tests, and typing tests
    setenv = PY_IGNORE_IMPORTMISMATCH=1
    extras =
        tests
        cplex-runtime
    package = wheel
    commands =
        pytest --basetemp="{env_tmp_dir}"

    [testenv:mypy]
    description = Run doctests, unit tests, functional tests, and typing tests
    setenv = PY_IGNORE_IMPORTMISMATCH=1
    extras = tests
    package = wheel
    commands =
        mypy src
        mypy ./tests/typing_tests/

    [testenv:py{312,313}]
    # Since CPLEX runtime is not supported beyond python 3.11, we skip all runtime-based tests
    description = Run doctests, unit tests ex. model functions, and typing tests
    extras = tests
    commands =
        pytest --basetemp="{env_tmp_dir}" \
            --ignore=tests/unit_tests/model_funcs/ \
            --ignore=tests/functional_tests/ \
            --ignore=src/docplex_extensions/_model_funcs.py

    [testenv:cpx2010]
    description = Run unit tests for model functions against CPLEX 20.1.0
    basepython = 3.10
    deps = cplex==20.1.0.4
    extras = tests
    commands =
        pytest --basetemp="{env_tmp_dir}" --no-cov \
            tests/unit_tests/model_funcs/

    [testenv:cpx2210]
    description = Run unit tests for model functions against CPLEX 22.1.0
    basepython = 3.10
    deps = cplex==22.1.0.0
    extras = tests
    commands =
        pytest --basetemp="{env_tmp_dir}" --no-cov \
            tests/unit_tests/model_funcs/

    [testenv:cpx2211]
    description = Run unit tests for model functions against CPLEX 22.1.1
    basepython = 3.10
    deps = cplex==22.1.1.2
    extras = tests
    commands =
        pytest --basetemp="{env_tmp_dir}" --no-cov \
            tests/unit_tests/model_funcs/

    [testenv:pd15]
    description = Run unit tests and doctests for pandas accessors against pandas 1.5
    basepython = 3.10
    deps =
        pandas==1.5.0
        numpy<2.0
    commands =
        pytest --basetemp="{env_tmp_dir}" --no-cov \
            src/docplex_extensions/_pandas_accessors.py \
            tests/unit_tests/pandas_accessors \
            tests/functional_tests/multicommodity_test.py

    [testenv:pd20]
    description = Run unit tests and doctests for pandas accessors against pandas 2.0
    basepython = 3.10
    deps =
        pandas==2.0.0
        numpy<2.0
    commands =
        pytest --basetemp="{env_tmp_dir}" --no-cov \
            src/docplex_extensions/_pandas_accessors.py \
            tests/unit_tests/pandas_accessors \
            tests/functional_tests/multicommodity_test.py

    [testenv:pdX]
    description = Run unit tests and doctests for pandas accessors against pandas latest
    basepython = 3.10
    deps = pandas
    commands =
        pytest --basetemp="{env_tmp_dir}" --no-cov \
            src/docplex_extensions/_pandas_accessors.py \
            tests/unit_tests/pandas_accessors \
            tests/functional_tests/multicommodity_test.py
"""
